[{"documents":[{"i":1,"t":"css(单行、多行)展示省略号，兼容所有浏览器","u":"/ChBlog/blog/ellipsis","b":["Blog"]},{"i":7,"t":"Hexo、VitePress、Docusaurus，哪个最适合你的静态网站生成器？","u":"/ChBlog/blog/how-to-select-ssg-frame","b":["Blog"]},{"i":23,"t":"","u":"/ChBlog/blog/archive","b":["Blog"]},{"i":24,"t":"Docker的作用，到底解决了什么痛点?","u":"/ChBlog/blog/what-is-docker","b":["Blog"]},{"i":34,"t":"React 还是 Vue，哪个 JS 框架最好？","u":"/ChBlog/blog/react-or-vue","b":["Blog"]},{"i":54,"t":"概要","u":"/ChBlog/docs/intro","b":[]},{"i":56,"t":"介绍","u":"/ChBlog/docs/nextjs/get-start","b":["NextJs"]},{"i":62,"t":"介绍","u":"/ChBlog/docs/nextjs/router/index","b":["NextJs","路由"]},{"i":66,"t":"安装","u":"/ChBlog/docs/nextjs/install","b":["NextJs"]},{"i":70,"t":"UI组件库的选择","u":"/ChBlog/docs/nextjs/styling/ui-component","b":["NextJs","样式"]},{"i":78,"t":"可复用的布局","u":"/ChBlog/docs/nextjs/router/layout","b":["NextJs","路由"]},{"i":84,"t":"loading加载","u":"/ChBlog/docs/nextjs/router/loading","b":["NextJs","路由"]},{"i":94,"t":"404页面","u":"/ChBlog/docs/nextjs/router/not-found","b":["NextJs","路由"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,2.419]],["t/7",[1,2.419]],["t/23",[]],["t/24",[2,2.419]],["t/34",[3,0.991,4,0.567,5,0.991,6,0.991]],["t/54",[4,0.831]],["t/56",[4,0.831]],["t/62",[4,0.831]],["t/66",[4,0.831]],["t/70",[7,2.419]],["t/78",[4,0.831]],["t/84",[8,2.419]],["t/94",[9,2.419]]],"invertedIndex":[["",{"_index":4,"t":{"34":{"position":[[6,2],[19,5]]},"54":{"position":[[0,2]]},"56":{"position":[[0,2]]},"62":{"position":[[0,2]]},"66":{"position":[[0,2]]},"78":{"position":[[0,6]]}}}],["404",{"_index":9,"t":{"94":{"position":[[0,5]]}}}],["css",{"_index":0,"t":{"1":{"position":[[0,23]]}}}],["docker",{"_index":2,"t":{"24":{"position":[[0,20]]}}}],["hexo、vitepress、docusauru",{"_index":1,"t":{"7":{"position":[[0,41]]}}}],["js",{"_index":6,"t":{"34":{"position":[[16,2]]}}}],["load",{"_index":8,"t":{"84":{"position":[[0,9]]}}}],["react",{"_index":3,"t":{"34":{"position":[[0,5]]}}}],["ui",{"_index":7,"t":{"70":{"position":[[0,8]]}}}],["vue",{"_index":5,"t":{"34":{"position":[[9,6]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":3,"t":"超出单行省略号","u":"/ChBlog/blog/ellipsis","h":"#超出单行省略号","p":1},{"i":5,"t":"超出多行省略号","u":"/ChBlog/blog/ellipsis","h":"#超出多行省略号","p":1},{"i":9,"t":"1、应用场景","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#1应用场景","p":7},{"i":11,"t":"2、功能","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#2功能","p":7},{"i":13,"t":"3、社区生态","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#3社区生态","p":7},{"i":15,"t":"4、性能","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#4性能","p":7},{"i":17,"t":"5、扩展性","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#5扩展性","p":7},{"i":19,"t":"总结","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#总结","p":7},{"i":21,"t":"参考：","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#参考","p":7},{"i":26,"t":"1. 移植性, 一次构建到处使用","u":"/ChBlog/blog/what-is-docker","h":"#1-移植性-一次构建到处使用","p":24},{"i":28,"t":"2. 隔离性, 不同的容器之间相互独立，互不干扰","u":"/ChBlog/blog/what-is-docker","h":"#2-隔离性-不同的容器之间相互独立互不干扰","p":24},{"i":30,"t":"3. 轻量, docker是一种虚拟化容器技术。","u":"/ChBlog/blog/what-is-docker","h":"#3-轻量-docker是一种虚拟化容器技术","p":24},{"i":32,"t":"4. 启动快","u":"/ChBlog/blog/what-is-docker","h":"#4-启动快","p":24},{"i":36,"t":"⚖️框架概述","u":"/ChBlog/blog/react-or-vue","h":"#️框架概述","p":34},{"i":38,"t":"🍏 使用Vue.js的原因","u":"/ChBlog/blog/react-or-vue","h":"#-使用vuejs的原因","p":34},{"i":40,"t":"⚛️ 使用 React 的原因","u":"/ChBlog/blog/react-or-vue","h":"#️-使用-react-的原因","p":34},{"i":42,"t":"🥇 受欢迎程度和性能的比较","u":"/ChBlog/blog/react-or-vue","h":"#-受欢迎程度和性能的比较","p":34},{"i":44,"t":"🧊可扩展性","u":"/ChBlog/blog/react-or-vue","h":"#可扩展性","p":34},{"i":46,"t":"📲适应移动设备","u":"/ChBlog/blog/react-or-vue","h":"#适应移动设备","p":34},{"i":48,"t":"🚎🔩规模和社区支持","u":"/ChBlog/blog/react-or-vue","h":"#规模和社区支持","p":34},{"i":50,"t":"🏒使用案例","u":"/ChBlog/blog/react-or-vue","h":"#使用案例","p":34},{"i":52,"t":"👏结论","u":"/ChBlog/blog/react-or-vue","h":"#结论","p":34},{"i":58,"t":"什么是 Next.js","u":"/ChBlog/docs/nextjs/get-start","h":"#什么是-nextjs","p":56},{"i":60,"t":"Next.js 的特点","u":"/ChBlog/docs/nextjs/get-start","h":"#nextjs-的特点","p":56},{"i":64,"t":"路由规则，约定大于配置","u":"/ChBlog/docs/nextjs/router/index","h":"#路由规则约定大于配置","p":62},{"i":68,"t":"创建新的项目","u":"/ChBlog/docs/nextjs/install","h":"#创建新的项目","p":66},{"i":72,"t":"css-in-js组件库","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#css-in-js组件库","p":70},{"i":74,"t":"推荐的UI组件库","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#推荐的ui组件库","p":70},{"i":76,"t":"参考：","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#参考","p":70},{"i":80,"t":"children props","u":"/ChBlog/docs/nextjs/router/layout","h":"#children-props","p":78},{"i":82,"t":"嵌套布局","u":"/ChBlog/docs/nextjs/router/layout","h":"#嵌套布局","p":78},{"i":86,"t":"传统ssr渲染流程","u":"/ChBlog/docs/nextjs/router/loading","h":"#传统ssr渲染流程","p":84},{"i":88,"t":"流式渲染","u":"/ChBlog/docs/nextjs/router/loading","h":"#流式渲染","p":84},{"i":90,"t":"Suspense","u":"/ChBlog/docs/nextjs/router/loading","h":"#suspense","p":84},{"i":92,"t":"Example","u":"/ChBlog/docs/nextjs/router/loading","h":"#example","p":84}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/3",[0,0.442]],["t/5",[0,0.442]],["t/9",[1,3.06]],["t/11",[2,3.06]],["t/13",[3,3.06]],["t/15",[4,3.06]],["t/17",[5,3.646]],["t/19",[0,0.442]],["t/21",[0,0.442]],["t/26",[0,0.408,1,1.861]],["t/28",[0,0.408,2,1.861]],["t/30",[0,0.269,3,1.861,6,2.218]],["t/32",[0,0.334,4,2.314]],["t/36",[0,0.442]],["t/38",[0,0.334,7,2.758]],["t/40",[0,0.44,8,1.854]],["t/42",[0,0.479]],["t/44",[0,0.442]],["t/46",[0,0.442]],["t/48",[0,0.442]],["t/50",[0,0.442]],["t/52",[0,0.442]],["t/58",[0,0.334,9,2.314]],["t/60",[0,0.334,9,2.314]],["t/64",[0,0.442]],["t/68",[0,0.442]],["t/72",[10,2.758,11,2.758]],["t/74",[12,3.646]],["t/76",[0,0.442]],["t/80",[13,2.758,14,2.758]],["t/82",[0,0.442]],["t/86",[15,3.646]],["t/88",[0,0.442]],["t/90",[16,3.646]],["t/92",[17,3.646]]],"invertedIndex":[["",{"_index":0,"t":{"3":{"position":[[0,7]]},"5":{"position":[[0,7]]},"19":{"position":[[0,2]]},"21":{"position":[[0,3]]},"26":{"position":[[3,4],[8,8]]},"28":{"position":[[3,4],[8,16]]},"30":{"position":[[3,3]]},"32":{"position":[[3,3]]},"36":{"position":[[0,6]]},"38":{"position":[[0,2]]},"40":{"position":[[0,2],[3,2],[12,3]]},"42":{"position":[[0,2],[3,11]]},"44":{"position":[[0,6]]},"46":{"position":[[0,8]]},"48":{"position":[[0,11]]},"50":{"position":[[0,6]]},"52":{"position":[[0,4]]},"58":{"position":[[0,3]]},"60":{"position":[[8,3]]},"64":{"position":[[0,11]]},"68":{"position":[[0,6]]},"76":{"position":[[0,3]]},"82":{"position":[[0,4]]},"88":{"position":[[0,4]]}}}],["1",{"_index":1,"t":{"9":{"position":[[0,6]]},"26":{"position":[[0,2]]}}}],["2",{"_index":2,"t":{"11":{"position":[[0,4]]},"28":{"position":[[0,2]]}}}],["3",{"_index":3,"t":{"13":{"position":[[0,6]]},"30":{"position":[[0,2]]}}}],["4",{"_index":4,"t":{"15":{"position":[[0,4]]},"32":{"position":[[0,2]]}}}],["5",{"_index":5,"t":{"17":{"position":[[0,5]]}}}],["children",{"_index":13,"t":{"80":{"position":[[0,8]]}}}],["css",{"_index":10,"t":{"72":{"position":[[0,3]]}}}],["docker",{"_index":6,"t":{"30":{"position":[[7,17]]}}}],["exampl",{"_index":17,"t":{"92":{"position":[[0,7]]}}}],["js",{"_index":11,"t":{"72":{"position":[[7,5]]}}}],["next.j",{"_index":9,"t":{"58":{"position":[[4,7]]},"60":{"position":[[0,7]]}}}],["prop",{"_index":14,"t":{"80":{"position":[[9,5]]}}}],["react",{"_index":8,"t":{"40":{"position":[[6,5]]}}}],["ssr",{"_index":15,"t":{"86":{"position":[[0,9]]}}}],["suspens",{"_index":16,"t":{"90":{"position":[[0,8]]}}}],["ui",{"_index":12,"t":{"74":{"position":[[0,8]]}}}],["vue.j",{"_index":7,"t":{"38":{"position":[[3,11]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"本文探讨了如何使用CSS来处理超出容器范围的内容并展示省略号, 帮助您在网页设计中实现优雅的文本截断效果。","s":"css(单行、多行)展示省略号，兼容所有浏览器","u":"/ChBlog/blog/ellipsis","h":"","p":1},{"i":4,"t":".ellipsis { overflow: hidden; white-space: nowrap; text-overflow: ellipsis; }","s":"超出单行省略号","u":"/ChBlog/blog/ellipsis","h":"#超出单行省略号","p":1},{"i":6,"t":"webkit内核 .introduction { display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 2; text-overflow: ellipsis; overflow: hidden; } 注意点： 必须给文本的最近父容器添加上述属性，否则会在ios下失效。 如果子元素设置为display: inline时，也可生效。 非webkit内核, 兼容方式 .introduction { display: block; position: relative; line-height: 1.4em; height: 2.8em; overflow: hidden; } .introduction::after { content: \"...\"; font-weight: bold; position: absolute; bottom: .3em; right: 0; width: 1.4em; background-color: white; } 添加伪元素，设置白色背景，定位到最后一行末尾。","s":"超出多行省略号","u":"/ChBlog/blog/ellipsis","h":"#超出多行省略号","p":1},{"i":8,"t":"在选择合适的静态网站生成器时，Hexo、VitePress、Docusaurus是三个备受关注的选项，那么到底哪一个框架更适合你呢？本文将从使用场景、社区生态、功能、性能、扩展性这五个方面，帮你全方位分析各个框架的优缺点，以便为你的技术选型提供参考。","s":"Hexo、VitePress、Docusaurus，哪个最适合你的静态网站生成器？","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"","p":7},{"i":10,"t":"Hexo, 官方定位自己是 \"快速、简洁且高效的博客框架\" , 但是它同样适合构建简单的文档网站，它具有简单易用的特点，适合那些对技术要求不高的个人用户快速搭建和管理网站。 VitePress, 基于vue的SSG框架，可以快速构建个人的技术文档系统，但是官方默认是不支持构建博客网站的，但是对于专业的前端开发者来说可以自己定制主题，对于非技术人员有一定的门槛。 Docusaurus, 基于react的SSG框架，相比与VitePress，Docusaurus支持博客和文档系统，同时也提供了一定的定制化能力，同样对于专业的前端开发者来说也可以自己定制主题，对于非技术人员有一定的门槛。","s":"1、应用场景","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#1应用场景","p":7},{"i":12,"t":"框架 国际化 主题切换 本地搜索 markdown语法 hexo ✓ ✓ ✓ ✓ vitepress ✓ ✓ ✓ ✓ docusaurus ✓ ✓ ✓ ✓ 常见的功能，这些框架都支持，所以大家可以放心使用。","s":"2、功能","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#2功能","p":7},{"i":14,"t":"社区： Hexo, 由众多的独立开发者和用户提供支持和贡献，其社区十分活跃，你可以在社区中找到帮助和解决方案。 VitePress作为Vue项目的一部分，可以享受到Vue社区的支持。Vue社区庞大活跃，有很多开发者和用户参与其中，提供支持和贡献。 Docusaurus由Facebook开发和维护，拥有庞大的社区和开发者基础。它的社区中有很多开发者和用户提供支持和贡献，可以获得丰富的资源和帮助。 github stars： 框架 github stars url hexo 38.2k https://github.com/hexojs/hexo vitepress 10.4k https://github.com/vuejs/vitepress docusaurus 51.8k https://github.com/facebook/docusaurus 相比较来说，docusaurus的stars数最多，hexo次之，vitepress最少当然10k左右的star其实已经很高了。 通过github stars的数量从侧面反应了这些框架在开源社区中的受欢迎程度和广泛使用的程度。然而，stars数目并不是衡量一个工具好坏的唯一标准。除了stars数目外，还应考虑其他因素，例如功能特性、扩展性、性能等。每个工具都有自己的特点和优势，适用于不同的使用场景和需求。因此，在选择合适的静态网站生成器时，除了stars数目外，还应该综合考虑工具的特点和适用性，以及社区支持和生态系统的健康程度，这只是提供给大家一个参考。 theme： Hexo官方提供了一些内置的主题供选择，如Next、landscape、jacman等。这些主题具有不同的风格和布局，可以根据个人喜好进行选择和定制。Hexo社区中也有许多第三方开发的主题，如Butterfly、Maupassant等。这些主题提供了更多的样式和功能定制选项，可以满足更多的需求。 VitePress官方提供了默认的主题，具有简洁的设计和易于导航的布局。这个主题适合构建技术文档和API文档等。VitePress使用Vue单文件组件来编写内容，因此可以根据需求自定义主题。可以通过修改默认主题的样式和布局，或者创建全新的主题来满足个性化需求。 Docusaurus官方提供了默认主题，具有专注于文档网站的特点。它提供了清晰的导航结构、多语言支持、版本控制等功能，适合构建开源项目的文档网站。Docusaurus支持通过React自定义布局和组件来创建定制化主题。可以根据项目需求进行样式和布局的修改，或者通过创建自定义组件来扩展功能。 主题模板是静态网站生成器中用于定义网站外观和布局的重要组成部分。Hexo、VitePress和Docusaurus都提供了丰富的主题模板供选择。 Hexo拥有官方和第三方主题，可满足不同风格和需求；VitePress提供默认主题和自定义选项，适用于简洁的开源项目文档网站；Docusaurus的官方主题同样适合构建开源项目文档网站，并支持自定义布局和组件。 在选择主题模板时，应考虑风格、功能定制和社区支持。通过选择适合的主题模板，您可以快速打造吸引人、个性化的网站，满足您的需求和品味。","s":"3、社区生态","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#3社区生态","p":7},{"i":16,"t":"说性能之前，得先知道各个框架底层的渲染框架， hexo，底层使用EJS，EJS是一款 \"嵌入式 JavaScript 模板\" , 因此hexo的运行时依赖很少，具有原生html的性能。 vitepress，底层使用了vite、vue进行构建，vitepress运行时会有一个hydrate的过程，因此需要额外依赖vue.js的运行时支持，也就是需要加载额外的js文件。 提示 所谓hydrate，指的是 Vue 在浏览器端接管由服务端发送的静态 HTML，使其变为由 Vue 管理的动态 DOM 的过程。简单解释来说，就是让静态的html可以通过vue.js进行交互。 Docusaurus，底层使用了webpack、react进行构建，同样也会有hydrate的过程，也需要加载额外的js文件。 总结来说，从页面加载速度来说，hexo > vitepress > docusaurus。从开发环境的速来来说：ejs > vite > webpack。 但是，这些框架页面的加载速度来说，其实也就是200ms以内的差异，如果使用http cache、gzip等优化手段，这些框架的渲染速度差异几乎可以忽略不计。","s":"4、性能","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#4性能","p":7},{"i":18,"t":"hexo，由于底层使用了ejs模板引擎，因此想要更加方便的扩展，其实相对来说不是一件容易的事情。然而如果你能选择hexo，我相信你其实也不需要什么额外的扩展。 vitepress，底层使用了vue，因此支持你完全使用vue的语法去定制你想要的任何样式。 docusaurus, 底层使用了react，因此同样支持你完全使用react的语法去定制你想要的任何样式。","s":"5、扩展性","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#5扩展性","p":7},{"i":20,"t":"综上所述，根据不同的使用场景和需求，可以选择适合的工具。 如果你是一个非前端开发者，那么我建议hexo，你完全可以使用hexo提供丰富的社区模板构建你想要的页面。 如果你是前端程序员，并且技术栈以vue为主，可以尝试vitepress，但是vitepress不支持博客，当然你完全可以定制化主题，但是不妨可以先看看hexo是否有满足你需求的博客主题模板。 如果你是前端程序员，并且技术栈以react为主，可以使用docusaurus，它同时支持博客和文档，同样支持定制化主题。 最后献上我的个人博客网站：https://blog.chdl.fun , 我的博客是采用了docusaurus进行构建，欢迎读者老爷前来围观。","s":"总结","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#总结","p":7},{"i":22,"t":"hexo官方网站： https://hexo.io vitepress官方网站：https://vitepress.dev docusaurus官方网站：https://docusaurus.io ejs官方网站：https://ejs.co vue.js：https://v2.ssr.vuejs.org/guide/hydration.html#client-side-hydration","s":"参考：","u":"/ChBlog/blog/how-to-select-ssg-frame","h":"#参考","p":7},{"i":25,"t":"本文探讨了Docker的作用和它在解决现代软件开发中的痛点方面的重要性。了解Docker如何提供轻量级、可移植和可扩展的容器化解决方案，简化了应用程序的部署、管理和跨环境移植。","s":"Docker的作用，到底解决了什么痛点?","u":"/ChBlog/blog/what-is-docker","h":"","p":24},{"i":27,"t":"假如有一个服务器a运行了很多项目(node、java、php、mysql)。有一天需要使用新的服务器b。 那么服务器a上的所有运行的项目都得迁移到服务器b上，那么需要给服务器b搭建各种运行环境，工作量耗时耗力。 使用docker将所以的项目以及运行环境进行镜像构建，只需要在另一个服务器上安装一个docker，并下载对应之前构建好的镜像，就能快速搭建出对应的运行环境，并将项目运行起来。","s":"1. 移植性, 一次构建到处使用","u":"/ChBlog/blog/what-is-docker","h":"#1-移植性-一次构建到处使用","p":24},{"i":29,"t":"Docker通过namespace实现隔离的，namespace是Linux提供的资源隔离机制，负责隔离进程。只有在同一个namespace下的进程可以相互联系，但无法感受到外部进程的存在，营造出处于一个独立的系统环境中的错觉。 因为namespace不管再怎么隔离，但是容器内部执行任务都依赖同一个cpu、内存等。为了防止容器过度占用或影响其他容器或宿主机，需要限制容器使用的 CPU 核心数量、内存大小，或者设置容器的网络带宽限制，以确保容器之间的资源使用互不干扰。因此使用了控制组（Control Groups，简称cgroups）是一个 Linux 内核特性，它可以为进程或进程组分配资源，并限制其资源使用量，确保系统的资源公平分配和高效利用。","s":"2. 隔离性, 不同的容器之间相互独立，互不干扰","u":"/ChBlog/blog/what-is-docker","h":"#2-隔离性-不同的容器之间相互独立互不干扰","p":24},{"i":31,"t":"他和虚拟机最根本的区别是：docker容器和宿主机共用操作系统内核，不会在宿主机上再次安装操作系统，更加节省资源。","s":"3. 轻量, docker是一种虚拟化容器技术。","u":"/ChBlog/blog/what-is-docker","h":"#3-轻量-docker是一种虚拟化容器技术","p":24},{"i":33,"t":"docker采用了一种镜像分层模型，通过这种模型可以实现镜像之间的共享和重用，启动容器时无需加载整个镜像层，所以启动会更快。","s":"4. 启动快","u":"/ChBlog/blog/what-is-docker","h":"#4-启动快","p":24},{"i":35,"t":"React 是用于构建单页应用程序的最流行的 JavaScript 库。另一方面，Vue.js声称是框架。它们比 Angular 有更多的共同点，Angular 是一个“真正的”框架。🚩 在本文中，我将对 React.js 和 Vue.js 进行详细比较，以便您决定哪种 JS 框架/库最适合您。🚧","s":"React 还是 Vue，哪个 JS 框架最好？","u":"/ChBlog/blog/react-or-vue","h":"","p":34},{"i":37,"t":"React 由 Facebook 的软件工程师 Jordan Walke 创建。目前，它由 Meta（前身为 Facebook）以及一个由个人开发者和公司组成的社区维护。 其丰富的生态系统和灵活性使其成为构建复杂用户界面和处理数据处理任务的完美选择。 此外，React Native 是 React.js 的扩展，使开发人员能够轻松创建混合移动应用程序。 Vue 是一个相对较新的进入者，由 Evan You 创建，Vue 专注于 UI 设计和开发的简单性和效率。 🧹🫧其直观的语法和清晰的设计原则使其对寻求用于构建界面的简单框架的开发人员具有吸引力。 Vue.js 还通过 Pinia 提供 built-in 动画和状态管理等功能，以满足广泛的开发需求。","s":"⚖️框架概述","u":"/ChBlog/blog/react-or-vue","h":"#️框架概述","p":34},{"i":39,"t":"Vue.js因其简单性而受到关注。开发人员欣赏其清晰而合乎逻辑的设计，它加快了开发过程和工作流程。 与其他一些框架不同，Vue.js在整个 UI 功能中保持一致的语法。 Vue.js的优势之一在于其高效的官方插件，这些插件为常见任务提供解决方案，例如 Vue-Router .","s":"🍏 使用Vue.js的原因","u":"/ChBlog/blog/react-or-vue","h":"#-使用vuejs的原因","p":34},{"i":41,"t":"React.js具有一些独特的功能，使其成为开发人员的热门选择。 JSX 语法简化了自定义组件的创建。📂 JSX 代表 JavaScript XML。JSX 允许我们在 React 中编写 HTML。JSX 使在 React 中编写和添加 HTML 变得更加容易。 它只是一个类似 XML 的扩展，允许我们编写看起来像标记的 JavaScript，并从组件返回它。 此外，React.js 为搜索引擎优化 （SEO） 提供了强大的支持，确保使用 React.js 构建的 Web 应用程序易于搜索引擎发现和索引。 React.js的另一个优势是它支持通过 React Native 进行移动开发。熟悉React.js的开发人员可以提高他们的技能，使用与React.js相同的语法和开发模式来构建本机移动应用程序。 此外，React 开发人员工具在组织和调试代码方面提供了宝贵的帮助。","s":"⚛️ 使用 React 的原因","u":"/ChBlog/blog/react-or-vue","h":"#️-使用-react-的原因","p":34},{"i":43,"t":"React.js 和 Vue.js 在开发者社区中都见证了巨大的需求，但React.js目前在受欢迎程度方面略有优势。其更大的用户群和广泛的生态系统有助于其在各种项目和行业中的广泛使用。 🛰️ 在性能方面，这两个框架都提供了 virtual DOM HTML 页面的高效呈现。📟 此方法可确保 UI 更新快速且响应迅速。 然而，Vue.js往往在组件创建和更新方面表现出色，这要归功于其简化的优化方法。 🔎 Statista的调查报告显示，42.62%的开发者选择了React.js，而18.82%的开发者使用了Vue.js。用于 Web 开发","s":"🥇 受欢迎程度和性能的比较","u":"/ChBlog/blog/react-or-vue","h":"#-受欢迎程度和性能的比较","p":34},{"i":45,"t":"可伸缩性是处理大型复杂应用程序的框架的关键因素。 React.js通过 \"smart\" and \"dumb\" components 的概念提供了一个可扩展的架构。 Vue.js提供了类似的可伸缩性方法，通过 Pinia 和其他官方库支持状态管理。这使开发人员能够有效地管理状态更改，并确保在项目复杂性增加时获得最佳性能。","s":"🧊可扩展性","u":"/ChBlog/blog/react-or-vue","h":"#可扩展性","p":34},{"i":47,"t":"React.js 和 Vue.js 都为移动开发提供解决方案，以满足对跨平台应用程序日益增长的需求。 React Native 是一个基于 React.js 的移动开发框架，允许开发人员使用熟悉的React.js模式构建原生 iOS 和 Android 应用程序。 Vue.js 支持阿里巴巴集团开发的移动 UI 框架 Weex，该框架支持使用Vue.js组件创建 iOS 和 Android 应用程序。 虽然 Weex 的受欢迎程度可能不如 React Native，但它为寻求以Vue.js为中心的移动开发方法的开发人员提供了一个可行的选择。","s":"📲适应移动设备","u":"/ChBlog/blog/react-or-vue","h":"#适应移动设备","p":34},{"i":49,"t":"框架的大小会显著影响其性能和加载时间。 与 React.js 相比，Vue.js 的默认大小更小，因此对于优先考虑优化的项目来说，这是一个有吸引力的选择。 此外，Vue.js提供了开箱即用的基本功能。例如，它减少了对额外库下载的需求。 在社区支持方面，React.js受益于Facebook和活跃的开源社区的支持。然而，由于其用户友好的设计和广泛的文档，Vue.js 在开发人员中也获得了吸引力。虽然React.js可能拥有更大的社区，但Vue.js的日益普及表明其长期成功的潜力。","s":"🚎🔩规模和社区支持","u":"/ChBlog/blog/react-or-vue","h":"#规模和社区支持","p":34},{"i":51,"t":"React.js 和 Vue.js 都是具有广泛用例的多功能框架。 React.js主要用于构建社交媒体平台、复杂的 Web 应用程序以及需要与 React Native 无缝集成以进行移动开发的项目。 另一方面，Vue.js非常适合中小型 Web 应用程序、实时平台和内容交付平台。其快速的性能和易于维护使其成为寻求轻量级框架以进行快速开发的开发人员的热门选择。","s":"🏒使用案例","u":"/ChBlog/blog/react-or-vue","h":"#使用案例","p":34},{"i":53,"t":"总之，React.js和Vue.js都为前端开发项目提供了独特的优势和优势。React.js 凭借其多功能性、强大的生态系统和对移动开发的支持而获胜。它是处理复杂应用程序的开发人员的首选。 另一方面，Vue.js以其简单、高效和快速的性能而著称。其直观的语法和高效的设计使其成为寻求开销最小的轻量级框架的开发人员的绝佳选择。 引用：https://dev.to/codewithshahan/react-or-vue-which-js-framework-is-best-25on","s":"👏结论","u":"/ChBlog/blog/react-or-vue","h":"#结论","p":34},{"i":55,"t":"在该文档中，你将学习到NextJs的入门知识，并了解如何使用NextJs构建一个博客。","s":"概要","u":"/ChBlog/docs/intro","h":"","p":54},{"i":57,"t":"欢迎阅读 Next.js 文档。","s":"介绍","u":"/ChBlog/docs/nextjs/get-start","h":"","p":56},{"i":59,"t":"Next.js 是一个用于构建全栈 Web 应用程序的 React 框架。您可以使用 React 组件来构建用户界面，并使用 Next.js 来构建其他功能和优化。","s":"什么是 Next.js","u":"/ChBlog/docs/nextjs/get-start","h":"#什么是-nextjs","p":56},{"i":61,"t":"构建全栈 Web 应用程序的 React 框架。 为 React 提供了开箱即用的服务器端渲染。 为 React 提供了开箱即用的静态站点生成。 为 React 提供了开箱即用的路由。","s":"Next.js 的特点","u":"/ChBlog/docs/nextjs/get-start","h":"#nextjs-的特点","p":56},{"i":63,"t":"NextJs的路由系统是NextJs的核心之一，先上一张图来感受下NextJs的路由系统。","s":"介绍","u":"/ChBlog/docs/nextjs/router/index","h":"","p":62},{"i":65,"t":"NextJs的路由系统是一个树形结构，最顶层是app目录，然后是路由文件，最后是具体的页面。 通过一张url和路由文件的映射关系图来直观的感受下： NextJs的路由系统遵循了约定大于配置的元素，每个路由文件下可以包含如下的文件： page.js: 必填 文件，在页面渲染后加载该文件, 用于渲染页面内容. layout.js: 布局文件，在页面渲染前会先加载该文件, 用于渲染页面布局. loading.js: 加载文件，在页面渲染前会先加载该文件, 用于渲染页面加载状态. error.js: 错误文件，在页面渲染后加载该文件, 用于渲染页面错误状态. not-found.js: 404文件，在页面渲染后加载该文件, 用于渲染页面404状态.","s":"路由规则，约定大于配置","u":"/ChBlog/docs/nextjs/router/index","h":"#路由规则约定大于配置","p":62},{"i":67,"t":"系统要求： node >= 18.17 或更高版本","s":"安装","u":"/ChBlog/docs/nextjs/install","h":"","p":66},{"i":69,"t":"执行npm，按照提示创建项目，建议使用 src 目录来存放源码 npm pnpm npx create-next-app@latest pnpx create-next-app@latest 之后会自动生成项目，进入项目目录，你会看到如下的目录结构 app: 后续所有代码存的放位置。 next.config.js: next.config.js存放了next的开发、生产环境下的配置。 打开package.json, 找到 scripts，可以看到如下npm命令： dev ：运行 next dev 以在开发模式下启动Next.js。 build ：运行 next build 以生成用于生产的应用程序。 start ：运行 next start 以启动Next.js生产服务器。 lint ：运行 next lint 以设置Next.js的内置 ESLint 配置。 执行 npm run dev，启动项目。","s":"创建新的项目","u":"/ChBlog/docs/nextjs/install","h":"#创建新的项目","p":66},{"i":71,"t":"选择适合自己项目的UI组件库是前端开发中至关重要的决策, 一个优秀的UI组件库可以提供丰富的界面元素和功能组件，帮助快速构建现代化的用户界面。 在做出选择之前，需要仔细评估项目需求和目标，考虑到组件库的可定制性、易用性、性能和兼容性等方面。 通过选择合适的UI组件库，可以大大提高开发效率和用户体验，为项目的成功奠定基础。","s":"UI组件库的选择","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"","p":70},{"i":73,"t":"其实我并不太推荐使用css-in-js组件库，因为css-in-js组件库的样式是使用js代码动态生成的，这会带来一些性能问题。 危险 最为重要的一点就是，ssr渲染css-in-js组件是会出现 页面闪烁!!!，由于css-in-js的css样式是由js动态生成的，当你的js尚未加载完成时页面会显示一个没有样式的html内容, 当js加载并执行之后，页面才会显示完整的样式，这一过程会导致页面闪烁!!! , 如果你能接收当我没说。 很不幸，antd的样式就采用了css-in-js的方案，很难受啊，网上也有一些网友曾提到过antd的样式闪烁问题， 不过，antd官方也提供了一些解决方案，可以参考 antd官方文档，简单说一下原理其实就是将样式代码提取出来，然后通过style标签插入到html中，但是我认为这种方案不好，虽然可以解决闪烁问题，但是没办法很好的利用link标签的预加载功能，而且antd的样式代码量比较大，提取出来之后，html文件会变得很大，同样官方也给出了该问题的处理办法，但是过程很繁琐，有兴趣的可以自行研究。","s":"css-in-js组件库","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#css-in-js组件库","p":70},{"i":75,"t":"与其折腾antd那些繁琐的配置，不如我推荐大家直接使用 react-bootstrap ，这个组件库的样式使用的是传统的scss预处理器，没有使用css-in-js的方案，因此不会出现样式闪烁的问题，而且使用起来非常简单，开箱即用。 安装依赖 npm install react-bootstrap bootstrap 导入样式 css scss import 'bootstrap/dist/css/bootstrap.min.css'; @import 'bootstrap/scss/bootstrap'; 使用组件 import {Button} from 'react-bootstrap'; function Example() { return ( <Button>Default</Button> ); } 有些小伙伴可能担心这样导入组件会导致打包体积过大，其实不然，next.js针对react-bootstrap的组件库做了一些优化，它是按需加载的，具体优化的第三方库有： lucide-react date-fns lodash-es ramda antd react-bootstrap ahooks @ant-design/icons @headlessui/react @headlessui-float/react @heroicons/react/20/solid @heroicons/react/24/solid @heroicons/react/24/outline @visx/visx @tremor/react rxjs @mui/material @mui/icons-material recharts react-use @material-ui/core @material-ui/icons @tabler/icons-react mui-core react-icons/*","s":"推荐的UI组件库","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#推荐的ui组件库","p":70},{"i":77,"t":"antd官方文档: https://ant.design/ react-bootstrap官方文档: https://react-bootstrap.netlify.app/","s":"参考：","u":"/ChBlog/docs/nextjs/styling/ui-component","h":"#参考","p":70},{"i":79,"t":"Next.js的layout是一个可复用的布局，不同的子页面可以共享布局容器，页面跳转时，layout容器不会重新渲染。","s":"可复用的布局","u":"/ChBlog/docs/nextjs/router/layout","h":"","p":78},{"i":81,"t":"app/layout.js export default function RootLayout({ children }) { return ( <html lang=\"en\"> <body> <header>头部不会重新渲染</header> <main>{children}</main> <footer>底部不会重新渲染</footer> </body> </html> ) } children props是layout的一个参数，它接收一个React元素, 该元素其实就是page.js的渲染结果。 你可以根据你的需求，在layout中添加一些公共的布局元素，比如header, footer等，这些元素不会随着路由的切换而重新渲染。","s":"children props","u":"/ChBlog/docs/nextjs/router/layout","h":"#children-props","p":78},{"i":83,"t":"layout组件也可以嵌套，例如： app作为最外层的layout，嵌套了dashboard的子layout，dashboard的layout其实对应的就是app中的children。 而dashboard layout.js中的children则对应了dashboard的page页面。","s":"嵌套布局","u":"/ChBlog/docs/nextjs/router/layout","h":"#嵌套布局","p":78},{"i":85,"t":"loading.js 可以帮助你使用React Suspense创建一个组件, 当你在加载路由内容时，它会显示该加载状态组件，渲染完成后，新的内容将会自动替换。","s":"loading加载","u":"/ChBlog/docs/nextjs/router/loading","h":"","p":84},{"i":87,"t":"传统的ssr渲染流程，当用户请求一个页面时，服务器会根据路由匹配到对应的组件，然后渲染该组件，最后将渲染后的html返回给用户。 如果组件中存在异步数据，那么服务端会等待异步数据加载完成之后再渲染，这样可能会导致页面白屏时间较长的问题。 而next.js提供了一种新的渲染方式，即流式渲染。","s":"传统ssr渲染流程","u":"/ChBlog/docs/nextjs/router/loading","h":"#传统ssr渲染流程","p":84},{"i":89,"t":"所谓的流式渲染，就是把一个组件拆分成多个小块，然后分块渲染。 这样的话，当客户端请求页面时会优先展示静态内容，等到服务端异步数据加载完成并渲染成功后，客户端再继续渲染剩余的内容。 但是，需要注意一点，流式渲染并不会提高整个页面的加载速度，只是将白屏时间缩短了。","s":"流式渲染","u":"/ChBlog/docs/nextjs/router/loading","h":"#流式渲染","p":84},{"i":91,"t":"Next.js提供的Suspense组件和传统的spa中使用的Suspense组件是不同的。 传统spa中的Suspense组件需要搭配React提供的lazy函数一起使用，用于加载异步组件。 Next.js中的Suspense组件则是用于加载异步数据的，不需要搭配lazy函数，当异步组件渲染完成时，会显示该组件中的内容。 还需要注意一点，Next.js中的Suspense并不会主动分包，而spa中的会根据import函数中的path自动分包，这一点需要额外注意。","s":"Suspense","u":"/ChBlog/docs/nextjs/router/loading","h":"#suspense","p":84},{"i":93,"t":"post PostFeed Weather app/post/page.js import { Suspense } from 'react' import { PostFeed, Weather } from './Components' export default function Posts() { return ( <section> <Suspense fallback={<p>Loading feed...</p>}> <PostFeed /> </Suspense> <Suspense fallback={<p>Loading weather...</p>}> <Weather /> </Suspense> </section> ) } export default async function PostFeed() { const list = await fetch('https://xxx') return (<pre>list</pre>) } export default async function Weather() { const list = await fetch('https://xxx') return (<pre>list</pre>) }","s":"Example","u":"/ChBlog/docs/nextjs/router/loading","h":"#example","p":84},{"i":95,"t":"当你访问一个未找到的路由时, 该页面将被呈现为NotFound的样式。 app/not-found.js import Link from 'next/link' export default function NotFound() { return ( <div> <h2>Not Found</h2> <p>Could not find requested resource</p> <Link href=\"/\">Return Home</Link> </div> ) }","s":"404页面","u":"/ChBlog/docs/nextjs/router/not-found","h":"","p":94}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,4.053,1,0.511]],["t/4",[1,0.49,2,4.381,3,4.381,4,3.304,5,3.304,6,3.875,7,3.875,8,3.304]],["t/6",[1,0.521,2,1.316,3,2.81,4,2.188,5,1.316,8,1.316,9,4.264,10,2.567,11,3.295,12,2.567,13,1.543,14,1.543,15,2.567,16,1.543,17,1.543,18,1.316,19,1.543,20,1.543,21,2.567,22,1.543,23,2.567,24,2.567,25,1.543,26,1.543,27,1.543,28,1.543,29,1.543,30,1.543,31,1.543,32,1.543,33,1.543,34,1.543,35,1.543,36,1.543,37,1.543,38,1.543]],["t/8",[39,5.604]],["t/10",[1,0.6,40,2.582,41,2.821,42,4.13,43,2.582,44,4.13]],["t/12",[1,0.665,40,1.851,41,2.023,43,1.851,45,2.962]],["t/14",[1,0.475,40,2.313,41,1.669,43,1.527,46,2.443,47,2.443,48,4.467,49,3.701,50,2.083,51,2.443,52,2.443,53,2.443,54,2.443,55,2.443,56,2.443,57,2.443,58,2.443,59,2.443,60,2.443,61,2.443,62,2.443,63,2.443,64,2.443]],["t/16",[1,0.612,40,1.558,41,1.702,65,2.492,66,1.883,67,2.492,68,2.492,69,2.124,70,2.565,71,1.702,72,2.124,73,2.492,74,2.492,75,2.492,76,2.492,77,2.492,78,2.492,79,2.492]],["t/18",[43,3.089,80,4.942,81,4.942,82,4.942]],["t/20",[1,0.533,43,2.763,83,4.421,84,4.421,85,4.421,86,4.421]],["t/22",[40,2.669,69,3.641,87,4.27,88,4.27,89,4.27,90,4.27,91,4.27,92,4.27]],["t/25",[93,5.604]],["t/27",[94,5.145,95,5.145,96,5.145]],["t/29",[1,0.421,97,4.421,98,4.421,99,4.421,100,4.421,101,4.421,102,4.421]],["t/31",[103,4.778]],["t/33",[103,4.778]],["t/35",[1,0.61,66,2.68,104,1.462,105,2.263,106,4.842,107,1.772,108,2.423]],["t/37",[1,0.627,70,2.565,104,1.549,105,1.165,107,1.245,109,3.756,110,2.492,111,2.492,112,2.492,113,1.702,114,2.492,115,1.558,116,2.124,117,2.492]],["t/39",[1,0.522,70,2.917,105,2.824,115,2.669,118,4.27]],["t/41",[1,0.622,66,2.64,71,1.548,104,1.976,107,2.394,113,1.548,119,3.495,120,2.267,121,2.267,122,2.267,123,2.267,124,1.417,125,2.267]],["t/43",[1,0.619,71,2.177,72,2.717,105,2.101,107,2.245,115,1.992,124,1.992,126,3.187,127,3.187]],["t/45",[1,0.567,105,1.93,107,2.063,116,3.521,128,4.13,129,4.13,130,3.521]],["t/47",[1,0.618,18,3.301,104,1.596,105,1.81,107,2.314,113,1.772,115,1.622,131,3.872,132,2.595,133,2.595,134,2.595]],["t/49",[1,0.576,105,2.559,107,2.133,135,4.27,136,4.27]],["t/51",[1,0.597,104,1.505,105,2.307,107,2.466,113,2.493,124,3.086]],["t/53",[1,0.394,70,2.821,105,1.93,108,2.821,137,4.13,138,4.13,139,4.13,140,4.13,141,4.13]],["t/55",[142,5.604]],["t/57",[1,0.585,143,3.514]],["t/59",[1,0.615,104,2.163,124,2.499,143,3.583]],["t/61",[1,0.644,104,2.442,124,2.217]],["t/63",[144,5.604]],["t/65",[1,0.626,50,2.65,145,3.108,146,3.108,147,2.65,148,3.108,149,2.65,150,3.108,151,2.65,152,4.416]],["t/67",[1,0.605,153,4.755,154,4.755]],["t/69",[1,0.565,143,2.539,155,3.17,156,1.836,157,1.836,158,1.836,159,2.96,160,4.998,161,2.96,162,1.836,163,1.836,164,1.836,165,1.836,166,1.836,167,1.836,168,3.718,169,2.96,170,2.96,171,2.96,172,1.836,173,1.836]],["t/71",[1,0.471,115,4.036]],["t/73",[0,3.589,1,0.518,108,3.244,174,3.45,175,3.45,176,3.45,177,3.45,178,3.45,179,3.45,180,2.606,181,3.45]],["t/75",[0,1.027,1,0.438,104,1.994,108,0.928,155,1.159,180,1.743,182,3.677,183,1.359,184,1.359,185,1.359,186,2.271,187,1.359,188,1.359,189,1.359,190,0.928,191,1.359,192,0.928,193,1.359,194,1.359,195,1.359,196,1.359,197,1.359,198,1.359,199,1.359,200,1.359,201,1.359,202,1.359,203,1.359,204,1.359,205,1.359,206,1.359,207,1.359,208,1.359,209,1.359,210,1.359,211,1.359,212,1.359,213,1.359,214,1.359,215,3.006,216,1.359,217,1.359,218,1.359,219,1.359,220,1.359,221,1.359,222,1.359,223,1.359]],["t/77",[104,1.889,180,3.462,182,3.906,224,4.582,225,4.582,226,4.582]],["t/79",[227,5.604]],["t/81",[1,0.533,71,2.729,147,2.308,190,1.849,192,1.849,228,2.706,229,2.045,230,2.045,231,2.706,232,3.995,233,2.706,234,3.995,235,2.706,236,2.706,237,2.706,238,2.706,239,2.706,240,2.706]],["t/83",[241,4.942,242,4.942,243,4.942,244,4.942]],["t/85",[1,0.471,104,2.038,149,4.214,245,4.214]],["t/87",[1,0.49,143,3.514,246,5.145]],["t/89",[1,0.626]],["t/91",[247,4.942,248,4.942,249,4.942,250,4.942]],["t/93",[1,0.572,104,0.592,130,1.225,186,1.827,190,2.139,192,2.139,229,2.366,230,2.366,245,3.493,251,2.418,252,3.672,253,3.672,254,1.437,255,2.418,256,2.418,257,1.437,258,1.437,259,2.418,260,2.418,261,2.418,262,2.418,263,2.418,264,2.418]],["t/95",[1,0.524,151,2.212,186,1.96,190,1.772,192,1.772,229,1.96,230,1.96,265,3.872,266,2.595,267,3.872,268,2.595,269,3.872,270,2.595,271,2.595,272,2.595,273,2.595,274,2.595,275,2.595,276,2.595,277,2.595]]],"invertedIndex":[["",{"_index":1,"t":{"2":{"position":[[32,21]]},"4":{"position":[[10,1],[76,1]]},"6":{"position":[[23,1],[143,1],[145,4],[222,4],[241,1],[332,1],[355,1],[366,6],[475,1],[477,23]]},"10":{"position":[[6,7],[14,15],[30,1],[32,54]]},"12":{"position":[[0,2],[3,3],[7,4],[12,4],[33,1],[35,1],[37,1],[39,1],[51,1],[53,1],[55,1],[57,1],[70,1],[72,1],[74,1],[76,1],[78,25]]},"14":{"position":[[0,3],[10,45],[213,2],[1275,65]]},"16":{"position":[[0,22],[43,4],[59,3],[63,1],[185,2],[206,16],[238,5],[369,1],[381,1],[409,1],[416,1]]},"20":{"position":[[0,28],[274,1]]},"29":{"position":[[279,47]]},"35":{"position":[[6,16],[81,13],[95,8],[113,1],[122,14],[140,11]]},"37":{"position":[[6,1],[17,6],[37,8],[86,39],[142,1],[153,24],[182,13],[212,3],[219,13],[233,45],[286,3],[296,2],[308,22]]},"39":{"position":[[73,11],[137,1]]},"41":{"position":[[37,16],[58,2],[80,5],[92,3],[105,2],[114,6],[126,7],[134,7],[146,17],[196,7],[210,13],[233,3],[241,16],[367,25]]},"43":{"position":[[9,1],[94,3],[98,15],[131,10],[142,6],[152,10],[204,2],[273,2]]},"45":{"position":[[0,24],[66,15],[110,50]]},"47":{"position":[[9,1],[18,32],[64,5],[117,1],[127,5],[140,13],[157,2],[187,1],[197,5],[203,2],[211,10]]},"49":{"position":[[0,19],[20,1],[41,36]]},"51":{"position":[[9,1],[18,15],[63,9],[86,15],[125,57]]},"53":{"position":[[47,47]]},"57":{"position":[[0,4],[13,3]]},"59":{"position":[[8,9],[22,5],[34,8],[49,13],[71,11]]},"61":{"position":[[0,4],[9,5],[21,3],[25,1],[33,15],[49,1],[57,15],[73,1],[81,11]]},"65":{"position":[[125,2],[128,15],[144,9],[165,19],[185,9],[207,19],[227,11],[249,17],[267,11]]},"67":{"position":[[0,5],[11,2],[20,5]]},"69":{"position":[[24,7],[96,28],[130,12],[210,2],[238,3],[275,3],[290,13],[310,3],[347,3],[382,3],[386,2]]},"71":{"position":[[72,48]]},"73":{"position":[[65,2],[204,1],[206,11]]},"75":{"position":[[117,4],[160,4],[257,4],[321,1],[330,1],[357,2],[360,1]]},"81":{"position":[[60,2],[63,1],[72,1],[190,1],[192,1]]},"85":{"position":[[40,40]]},"87":{"position":[[65,53]]},"89":{"position":[[0,30],[31,58],[90,40]]},"93":{"position":[[46,1],[57,1],[79,1],[99,1],[153,1],[162,1],[229,2],[301,2],[327,1],[329,1],[372,1],[385,1],[439,1],[481,1],[494,1],[548,1]]},"95":{"position":[[0,14],[117,1],[126,1],[235,1],[237,1]]}}}],["0",{"_index":35,"t":{"6":{"position":[[433,2]]}}}],["1.4em",{"_index":24,"t":{"6":{"position":[[292,6],[443,6]]}}}],["10.4k",{"_index":53,"t":{"14":{"position":[[285,5]]}}}],["18.17",{"_index":154,"t":{"67":{"position":[[14,5]]}}}],["2",{"_index":17,"t":{"6":{"position":[[97,2]]}}}],["2.8em",{"_index":25,"t":{"6":{"position":[[307,6]]}}}],["200ms以内的差异，如果使用http",{"_index":78,"t":{"16":{"position":[[427,41]]}}}],["25on",{"_index":141,"t":{"53":{"position":[[236,4]]}}}],["38.2k",{"_index":51,"t":{"14":{"position":[[238,5]]}}}],["3em",{"_index":33,"t":{"6":{"position":[[420,5]]}}}],["404",{"_index":152,"t":{"65":{"position":[[293,18],[312,12]]}}}],["51.8k",{"_index":55,"t":{"14":{"position":[[337,5]]}}}],["absolut",{"_index":31,"t":{"6":{"position":[[402,9]]}}}],["ahook",{"_index":201,"t":{"75":{"position":[[506,6]]}}}],["android",{"_index":131,"t":{"47":{"position":[[119,7],[189,7]]}}}],["angular",{"_index":106,"t":{"35":{"position":[[57,7],[65,15]]}}}],["ant",{"_index":202,"t":{"75":{"position":[[513,4]]}}}],["antd",{"_index":180,"t":{"73":{"position":[[276,24]]},"75":{"position":[[0,27],[485,4]]},"77":{"position":[[0,9]]}}}],["antd官方文档，简单说一下原理其实就是将样式代码提取出来，然后通过style标签插入到html中，但是我认为这种方案不好，虽然可以解决闪烁问题，但是没办法很好的利用link标签的预加载功能，而且antd的样式代码量比较大，提取出来之后，html",{"_index":181,"t":{"73":{"position":[[301,167]]}}}],["antd的样式就采用了css",{"_index":178,"t":{"73":{"position":[[218,18]]}}}],["app",{"_index":163,"t":{"69":{"position":[[125,4]]}}}],["app/layout.j",{"_index":228,"t":{"81":{"position":[[0,13]]}}}],["app/not",{"_index":266,"t":{"95":{"position":[[36,7]]}}}],["app/post/page.j",{"_index":254,"t":{"93":{"position":[[22,16]]}}}],["app@latest",{"_index":161,"t":{"69":{"position":[[57,10],[85,10]]}}}],["app作为最外层的layout，嵌套了dashboard的子layout，dashboard的layout其实对应的就是app中的children",{"_index":242,"t":{"83":{"position":[[18,74]]}}}],["async",{"_index":259,"t":{"93":{"position":[[346,5],[456,5]]}}}],["await",{"_index":262,"t":{"93":{"position":[[387,5],[496,5]]}}}],["a上的所有运行的项目都得迁移到服务器b上，那么需要给服务器b",{"_index":95,"t":{"27":{"position":[[53,52]]}}}],["a运行了很多项目(node、java、php、mysql)。有一天需要使用新的服务器b",{"_index":94,"t":{"27":{"position":[[0,52]]}}}],["background",{"_index":37,"t":{"6":{"position":[[450,10]]}}}],["best",{"_index":140,"t":{"53":{"position":[[231,4]]}}}],["block",{"_index":20,"t":{"6":{"position":[[252,6]]}}}],["bodi",{"_index":234,"t":{"81":{"position":[[91,6],[174,7]]}}}],["bold",{"_index":30,"t":{"6":{"position":[[386,5]]}}}],["bootstrap",{"_index":182,"t":{"75":{"position":[[34,9],[140,9],[150,9],[290,11],[407,39],[496,9]]},"77":{"position":[[36,14]]}}}],["bootstrap.netlify.app",{"_index":226,"t":{"77":{"position":[[65,22]]}}}],["bootstrap/dist/css/bootstrap.min.css",{"_index":187,"t":{"75":{"position":[[181,39]]}}}],["bootstrap/scss/bootstrap",{"_index":188,"t":{"75":{"position":[[229,27]]}}}],["bottom",{"_index":32,"t":{"6":{"position":[[412,7]]}}}],["box",{"_index":12,"t":{"6":{"position":[[42,4],[55,3]]}}}],["build",{"_index":169,"t":{"69":{"position":[[269,5],[284,5]]}}}],["built",{"_index":117,"t":{"37":{"position":[[299,5]]}}}],["button",{"_index":189,"t":{"75":{"position":[[269,8]]}}}],["button>default</button",{"_index":193,"t":{"75":{"position":[[332,24]]}}}],["cache、gzip",{"_index":79,"t":{"16":{"position":[[469,36]]}}}],["children",{"_index":232,"t":{"81":{"position":[[51,8],[194,8]]}}}],["clamp",{"_index":16,"t":{"6":{"position":[[90,6]]}}}],["color",{"_index":38,"t":{"6":{"position":[[461,6]]}}}],["compon",{"_index":130,"t":{"45":{"position":[[55,10]]},"93":{"position":[[106,14]]}}}],["const",{"_index":260,"t":{"93":{"position":[[374,5],[483,5]]}}}],["content",{"_index":27,"t":{"6":{"position":[[357,8]]}}}],["control",{"_index":100,"t":{"29":{"position":[[194,57]]}}}],["core",{"_index":222,"t":{"75":{"position":[[797,4]]}}}],["cpu",{"_index":99,"t":{"29":{"position":[[190,3]]}}}],["creat",{"_index":159,"t":{"69":{"position":[[45,6],[73,6]]}}}],["css",{"_index":0,"t":{"2":{"position":[[0,31]]},"73":{"position":[[0,13],[99,13]]},"75":{"position":[[165,3]]}}}],["dashboard",{"_index":243,"t":{"83":{"position":[[93,10]]}}}],["date",{"_index":196,"t":{"75":{"position":[[460,4]]}}}],["default",{"_index":230,"t":{"81":{"position":[[21,7]]},"93":{"position":[[128,7],[338,7],[448,7]]},"95":{"position":[[89,7]]}}}],["design/icon",{"_index":203,"t":{"75":{"position":[[518,12]]}}}],["dev",{"_index":168,"t":{"69":{"position":[[234,3],[247,3],[397,9]]}}}],["display",{"_index":11,"t":{"6":{"position":[[25,8],[180,16],[243,8]]}}}],["div",{"_index":269,"t":{"95":{"position":[[128,5],[228,6]]}}}],["docker",{"_index":103,"t":{"31":{"position":[[0,57]]},"33":{"position":[[0,62]]}}}],["docker将所以的项目以及运行环境进行镜像构建，只需要在另一个服务器上安装一个dock",{"_index":96,"t":{"27":{"position":[[106,87]]}}}],["docker的作用和它在解决现代软件开发中的痛点方面的重要性。了解dock",{"_index":93,"t":{"25":{"position":[[0,88]]}}}],["docker通过namespace实现隔离的，namespace是linux提供的资源隔离机制，负责隔离进程。只有在同一个namespac",{"_index":97,"t":{"29":{"position":[[0,114]]}}}],["docusauru",{"_index":43,"t":{"10":{"position":[[182,11]]},"12":{"position":[[59,10]]},"14":{"position":[[326,10]]},"18":{"position":[[127,11]]},"20":{"position":[[276,34]]}}}],["docusaurus。从开发环境的速来来说：ej",{"_index":75,"t":{"16":{"position":[[383,25]]}}}],["docusaurus官方提供了默认主题，具有专注于文档网站的特点。它提供了清晰的导航结构、多语言支持、版本控制等功能，适合构建开源项目的文档网站。docusaurus支持通过react",{"_index":62,"t":{"14":{"position":[[950,145]]}}}],["docusaurus官方网站：https://docusaurus.io",{"_index":89,"t":{"22":{"position":[[62,36]]}}}],["docusaurus由facebook",{"_index":47,"t":{"14":{"position":[[124,74]]}}}],["docusaurus的stars数最多，hexo次之，vitepress最少当然10k左右的star",{"_index":57,"t":{"14":{"position":[[382,64]]}}}],["docusaurus，底层使用了webpack、react进行构建，同样也会有hydrate的过程，也需要加载额外的j",{"_index":74,"t":{"16":{"position":[[285,63]]}}}],["dom",{"_index":72,"t":{"16":{"position":[[244,3]]},"43":{"position":[[122,3]]}}}],["dumb",{"_index":129,"t":{"45":{"position":[[48,6]]}}}],["ejs官方网站：https://ejs.co",{"_index":90,"t":{"22":{"position":[[99,22]]}}}],["ellipsi",{"_index":2,"t":{"4":{"position":[[0,9],[66,9]]},"6":{"position":[[115,9]]}}}],["error.j",{"_index":150,"t":{"65":{"position":[[239,9]]}}}],["es",{"_index":199,"t":{"75":{"position":[[476,2]]}}}],["eslint",{"_index":172,"t":{"69":{"position":[[375,6]]}}}],["evan",{"_index":114,"t":{"37":{"position":[[196,4]]}}}],["exampl",{"_index":191,"t":{"75":{"position":[[311,9]]}}}],["export",{"_index":229,"t":{"81":{"position":[[14,6]]},"93":{"position":[[121,6],[331,6],[441,6]]},"95":{"position":[[82,6]]}}}],["facebook",{"_index":109,"t":{"37":{"position":[[8,8],[55,30]]}}}],["fallback={<p>load",{"_index":256,"t":{"93":{"position":[[184,20],[254,20]]}}}],["feed...</p",{"_index":257,"t":{"93":{"position":[[205,13]]}}}],["fetch('https://xxx",{"_index":263,"t":{"93":{"position":[[393,20],[502,20]]}}}],["find",{"_index":273,"t":{"95":{"position":[[166,4]]}}}],["float/react",{"_index":206,"t":{"75":{"position":[[561,11]]}}}],["fn",{"_index":197,"t":{"75":{"position":[[465,3]]}}}],["font",{"_index":28,"t":{"6":{"position":[[373,4]]}}}],["footer",{"_index":240,"t":{"81":{"position":[[296,27]]}}}],["footer>底部不会重新渲染</foot",{"_index":237,"t":{"81":{"position":[[148,25]]}}}],["found.j",{"_index":151,"t":{"65":{"position":[[283,9]]},"95":{"position":[[44,8]]}}}],["found</h2",{"_index":271,"t":{"95":{"position":[[142,10]]}}}],["framework",{"_index":139,"t":{"53":{"position":[[218,9]]}}}],["function",{"_index":190,"t":{"75":{"position":[[302,8]]},"81":{"position":[[29,8]]},"93":{"position":[[136,8],[352,8],[462,8]]},"95":{"position":[[97,8]]}}}],["github",{"_index":48,"t":{"14":{"position":[[199,6],[216,6],[447,8]]}}}],["groups，简称cgroup",{"_index":101,"t":{"29":{"position":[[252,20]]}}}],["h2>not",{"_index":270,"t":{"95":{"position":[[134,7]]}}}],["header>头部不会重新渲染</head",{"_index":235,"t":{"81":{"position":[[98,25]]}}}],["headlessui",{"_index":205,"t":{"75":{"position":[[549,11]]}}}],["headlessui/react",{"_index":204,"t":{"75":{"position":[[531,17]]}}}],["height",{"_index":23,"t":{"6":{"position":[[284,7],[299,7]]}}}],["heroicons/react/20/solid",{"_index":207,"t":{"75":{"position":[[573,25]]}}}],["heroicons/react/24/outlin",{"_index":209,"t":{"75":{"position":[[625,27]]}}}],["heroicons/react/24/solid",{"_index":208,"t":{"75":{"position":[[599,25]]}}}],["hexo",{"_index":40,"t":{"10":{"position":[[0,5]]},"12":{"position":[[28,4]]},"14":{"position":[[4,5],[233,4]]},"16":{"position":[[349,19]]},"22":{"position":[[0,9]]}}}],["hexo、vitepress、docusauru",{"_index":39,"t":{"8":{"position":[[0,125]]}}}],["hexo、vitepress和docusauru",{"_index":63,"t":{"14":{"position":[[1096,72]]}}}],["hexo官方提供了一些内置的主题供选择，如next、landscape、jacman等。这些主题具有不同的风格和布局，可以根据个人喜好进行选择和定制。hexo社区中也有许多第三方开发的主题，如butterfly、maupass",{"_index":60,"t":{"14":{"position":[[670,148]]}}}],["hexo拥有官方和第三方主题，可满足不同风格和需求；vitepress提供默认主题和自定义选项，适用于简洁的开源项目文档网站；docusauru",{"_index":64,"t":{"14":{"position":[[1169,105]]}}}],["hexo的运行时依赖很少，具有原生html",{"_index":67,"t":{"16":{"position":[[65,27]]}}}],["hexo，你完全可以使用hexo",{"_index":83,"t":{"20":{"position":[[29,52]]}}}],["hexo，底层使用ejs，ej",{"_index":65,"t":{"16":{"position":[[23,19]]}}}],["hexo，由于底层使用了ejs模板引擎，因此想要更加方便的扩展，其实相对来说不是一件容易的事情。然而如果你能选择hexo",{"_index":80,"t":{"18":{"position":[[0,79]]}}}],["hidden",{"_index":4,"t":{"4":{"position":[[22,7]]},"6":{"position":[[135,7],[324,7]]}}}],["home</link",{"_index":277,"t":{"95":{"position":[[216,11]]}}}],["href=\"/\">return",{"_index":276,"t":{"95":{"position":[[200,15]]}}}],["html",{"_index":71,"t":{"16":{"position":[[223,10]]},"41":{"position":[[121,4]]},"43":{"position":[[126,4]]},"81":{"position":[[74,5],[182,7]]}}}],["html。jsx",{"_index":121,"t":{"41":{"position":[[96,8]]}}}],["html可以通过vue.j",{"_index":73,"t":{"16":{"position":[[248,36]]}}}],["https://ant.design",{"_index":224,"t":{"77":{"position":[[10,19]]}}}],["https://blog.chdl.fun",{"_index":86,"t":{"20":{"position":[[239,34]]}}}],["https://dev.to/codewithshahan/react",{"_index":138,"t":{"53":{"position":[[163,38]]}}}],["https://github.com/facebook/docusauru",{"_index":56,"t":{"14":{"position":[[343,38]]}}}],["https://github.com/hexojs/hexo",{"_index":52,"t":{"14":{"position":[[244,30]]}}}],["https://github.com/vuejs/vitepress",{"_index":54,"t":{"14":{"position":[[291,34]]}}}],["https://hexo.io",{"_index":87,"t":{"22":{"position":[[10,15]]}}}],["https://react",{"_index":225,"t":{"77":{"position":[[51,13]]}}}],["hydrat",{"_index":69,"t":{"16":{"position":[[188,13]]},"22":{"position":[[187,9]]}}}],["icon",{"_index":223,"t":{"75":{"position":[[808,7]]}}}],["import",{"_index":186,"t":{"75":{"position":[[174,6],[221,7],[262,6]]},"93":{"position":[[39,6],[72,6]]},"95":{"position":[[53,6]]}}}],["inlin",{"_index":19,"t":{"6":{"position":[[197,13]]}}}],["instal",{"_index":184,"t":{"75":{"position":[[126,7]]}}}],["introduct",{"_index":10,"t":{"6":{"position":[[9,13],[227,13]]}}}],["introduction::aft",{"_index":26,"t":{"6":{"position":[[334,20]]}}}],["io",{"_index":18,"t":{"6":{"position":[[150,29]]},"47":{"position":[[113,3],[183,3]]}}}],["javascript",{"_index":66,"t":{"16":{"position":[[48,10]]},"35":{"position":[[23,10]]},"41":{"position":[[61,10],[164,19]]}}}],["jordan",{"_index":110,"t":{"37":{"position":[[24,6]]}}}],["js",{"_index":108,"t":{"35":{"position":[[137,2]]},"53":{"position":[[215,2]]},"73":{"position":[[90,8],[166,37]]},"75":{"position":[[80,36]]}}}],["jsx",{"_index":119,"t":{"41":{"position":[[33,3],[54,3]]}}}],["js的css样式是由js动态生成的，当你的js尚未加载完成时页面会显示一个没有样式的html",{"_index":177,"t":{"73":{"position":[[116,49]]}}}],["js的方案，很难受啊，网上也有一些网友曾提到过antd",{"_index":179,"t":{"73":{"position":[[240,35]]}}}],["js组件库的样式是使用j",{"_index":175,"t":{"73":{"position":[[32,32]]}}}],["js组件库，因为css",{"_index":174,"t":{"73":{"position":[[17,11]]}}}],["lang=\"en",{"_index":233,"t":{"81":{"position":[[80,10]]}}}],["layout",{"_index":241,"t":{"83":{"position":[[0,17]]}}}],["layout.j",{"_index":148,"t":{"65":{"position":[[154,10]]}}}],["layout.js中的children则对应了dashboard的pag",{"_index":244,"t":{"83":{"position":[[104,40]]}}}],["layout中添加一些公共的布局元素，比如head",{"_index":239,"t":{"81":{"position":[[256,39]]}}}],["line",{"_index":15,"t":{"6":{"position":[[85,4],[279,4]]}}}],["link",{"_index":267,"t":{"95":{"position":[[60,4],[194,5]]}}}],["lint",{"_index":171,"t":{"69":{"position":[[342,4],[356,4]]}}}],["linux",{"_index":102,"t":{"29":{"position":[[273,5]]}}}],["list",{"_index":261,"t":{"93":{"position":[[380,4],[489,4]]}}}],["loading.j",{"_index":149,"t":{"65":{"position":[[195,11]]},"85":{"position":[[0,10]]}}}],["lodash",{"_index":198,"t":{"75":{"position":[[469,6]]}}}],["lucid",{"_index":195,"t":{"75":{"position":[[447,6]]}}}],["main>{children}</main",{"_index":236,"t":{"81":{"position":[[124,23]]}}}],["markdown",{"_index":45,"t":{"12":{"position":[[17,10]]}}}],["materi",{"_index":215,"t":{"75":{"position":[[708,8],[736,9],[754,9]]}}}],["meta",{"_index":112,"t":{"37":{"position":[[46,8]]}}}],["mui",{"_index":221,"t":{"75":{"position":[[793,3]]}}}],["mui/icon",{"_index":214,"t":{"75":{"position":[[697,10]]}}}],["mui/materi",{"_index":213,"t":{"75":{"position":[[683,13]]}}}],["namespace不管再怎么隔离，但是容器内部执行任务都依赖同一个cpu",{"_index":98,"t":{"29":{"position":[[115,74]]}}}],["nativ",{"_index":113,"t":{"37":{"position":[[135,6]]},"41":{"position":[[285,6]]},"47":{"position":[[57,6]]},"51":{"position":[[79,6]]}}}],["native，但它为寻求以vue.j",{"_index":134,"t":{"47":{"position":[[228,45]]}}}],["next",{"_index":160,"t":{"69":{"position":[[52,4],[80,4],[242,4],[279,4],[314,4],[351,4]]}}}],["next.config.j",{"_index":164,"t":{"69":{"position":[[143,15]]}}}],["next.config.js存放了next",{"_index":165,"t":{"69":{"position":[[159,34]]}}}],["next.j",{"_index":143,"t":{"57":{"position":[[5,7]]},"59":{"position":[[0,7],[63,7]]},"69":{"position":[[251,17],[325,16],[361,13]]},"87":{"position":[[119,26]]}}}],["next.js中的suspense并不会主动分包，而spa中的会根据import函数中的path",{"_index":250,"t":{"91":{"position":[[163,71]]}}}],["next.js中的suspense组件则是用于加载异步数据的，不需要搭配lazi",{"_index":249,"t":{"91":{"position":[[97,65]]}}}],["next.js提供的suspense组件和传统的spa中使用的suspens",{"_index":247,"t":{"91":{"position":[[0,46]]}}}],["next.js的layout是一个可复用的布局，不同的子页面可以共享布局容器，页面跳转时，layout",{"_index":227,"t":{"79":{"position":[[0,60]]}}}],["next.js针对react",{"_index":194,"t":{"75":{"position":[[362,44]]}}}],["next/link",{"_index":268,"t":{"95":{"position":[[70,11]]}}}],["nextj",{"_index":146,"t":{"65":{"position":[[74,41]]}}}],["nextjs的入门知识，并了解如何使用nextj",{"_index":142,"t":{"55":{"position":[[0,43]]}}}],["nextjs的路由系统是nextjs的核心之一，先上一张图来感受下nextj",{"_index":144,"t":{"63":{"position":[[0,45]]}}}],["nextjs的路由系统是一个树形结构，最顶层是app",{"_index":145,"t":{"65":{"position":[[0,46]]}}}],["node",{"_index":153,"t":{"67":{"position":[[6,4]]}}}],["notfound",{"_index":265,"t":{"95":{"position":[[15,20],[106,10]]}}}],["nowrap",{"_index":7,"t":{"4":{"position":[[43,7]]}}}],["npm",{"_index":155,"t":{"69":{"position":[[0,19],[32,3],[389,3]]},"75":{"position":[[122,3]]}}}],["npx",{"_index":158,"t":{"69":{"position":[[41,3]]}}}],["orient",{"_index":13,"t":{"6":{"position":[[59,7]]}}}],["overflow",{"_index":3,"t":{"4":{"position":[[12,9],[56,9]]},"6":{"position":[[105,9],[125,9],[314,9]]}}}],["p>could",{"_index":272,"t":{"95":{"position":[[153,8]]}}}],["package.json",{"_index":166,"t":{"69":{"position":[[194,15]]}}}],["page.j",{"_index":147,"t":{"65":{"position":[[116,8]]},"81":{"position":[[235,20]]}}}],["pinia",{"_index":116,"t":{"37":{"position":[[290,5]]},"45":{"position":[[104,5]]}}}],["pnpm",{"_index":157,"t":{"69":{"position":[[36,4]]}}}],["pnpx",{"_index":162,"t":{"69":{"position":[[68,4]]}}}],["posit",{"_index":21,"t":{"6":{"position":[[259,9],[392,9]]}}}],["post",{"_index":251,"t":{"93":{"position":[[0,4],[145,7]]}}}],["postfe",{"_index":252,"t":{"93":{"position":[[5,8],[81,9],[219,9],[361,10]]}}}],["pre>list</pr",{"_index":264,"t":{"93":{"position":[[421,17],[530,17]]}}}],["props是layout的一个参数，它接收一个react",{"_index":238,"t":{"81":{"position":[[203,31]]}}}],["ramda",{"_index":200,"t":{"75":{"position":[[479,5]]}}}],["react",{"_index":104,"t":{"35":{"position":[[0,5]]},"37":{"position":[[0,5],[126,8]]},"41":{"position":[[86,5],[108,5],[279,5],[358,8]]},"47":{"position":[[51,5],[222,5]]},"51":{"position":[[73,5]]},"59":{"position":[[28,5],[43,5]]},"61":{"position":[[15,5],[27,5],[51,5],[75,5]]},"75":{"position":[[28,5],[134,5],[283,6],[454,5],[490,5],[726,5],[787,5],[802,5]]},"77":{"position":[[30,5]]},"85":{"position":[[11,12]]},"93":{"position":[[64,7]]}}}],["react.j",{"_index":107,"t":{"35":{"position":[[104,8]]},"37":{"position":[[144,8]]},"41":{"position":[[0,32],[184,11],[224,8],[258,20]]},"43":{"position":[[0,8],[18,75]]},"45":{"position":[[25,10]]},"47":{"position":[[0,8],[70,8],[79,33]]},"49":{"position":[[22,8]]},"51":{"position":[[0,8],[34,24]]}}}],["react.js受益于facebook和活跃的开源社区的支持。然而，由于其用户友好的设计和广泛的文档，vue.j",{"_index":135,"t":{"49":{"position":[[118,65]]}}}],["react.js可能拥有更大的社区，但vue.j",{"_index":136,"t":{"49":{"position":[[184,57]]}}}],["react.js和vue.js都为前端开发项目提供了独特的优势和优势。react.j",{"_index":137,"t":{"53":{"position":[[0,46]]}}}],["react.js的开发人员可以提高他们的技能，使用与react.j",{"_index":125,"t":{"41":{"position":[[292,65]]}}}],["react为主，可以使用docusauru",{"_index":85,"t":{"20":{"position":[[178,60]]}}}],["react的ssg框架，相比与vitepress，docusauru",{"_index":44,"t":{"10":{"position":[[194,100]]}}}],["react，因此同样支持你完全使用react",{"_index":82,"t":{"18":{"position":[[139,42]]}}}],["rechart",{"_index":216,"t":{"75":{"position":[[717,8]]}}}],["rel",{"_index":22,"t":{"6":{"position":[[269,9]]}}}],["request",{"_index":274,"t":{"95":{"position":[[171,9]]}}}],["resource</p",{"_index":275,"t":{"95":{"position":[[181,12]]}}}],["return",{"_index":192,"t":{"75":{"position":[[323,6]]},"81":{"position":[[65,6]]},"93":{"position":[[155,6],[414,6],[523,6]]},"95":{"position":[[119,6]]}}}],["right",{"_index":34,"t":{"6":{"position":[[426,6]]}}}],["rootlayout",{"_index":231,"t":{"81":{"position":[[38,12]]}}}],["router",{"_index":118,"t":{"39":{"position":[[130,6]]}}}],["run",{"_index":173,"t":{"69":{"position":[[393,3]]}}}],["rxj",{"_index":212,"t":{"75":{"position":[[678,4]]}}}],["scripts，可以看到如下npm",{"_index":167,"t":{"69":{"position":[[213,20]]}}}],["scss",{"_index":185,"t":{"75":{"position":[[169,4]]}}}],["scss预处理器，没有使用css",{"_index":183,"t":{"75":{"position":[[44,32]]}}}],["section",{"_index":255,"t":{"93":{"position":[[164,9],[316,10]]}}}],["seo",{"_index":123,"t":{"41":{"position":[[204,5]]}}}],["side",{"_index":92,"t":{"22":{"position":[[182,4]]}}}],["smart",{"_index":128,"t":{"45":{"position":[[36,7]]}}}],["space",{"_index":6,"t":{"4":{"position":[[36,6]]}}}],["spa中的suspense组件需要搭配react提供的lazi",{"_index":248,"t":{"91":{"position":[[47,49]]}}}],["src",{"_index":156,"t":{"69":{"position":[[20,3]]}}}],["ssr渲染css",{"_index":176,"t":{"73":{"position":[[68,18]]}}}],["ssr渲染流程，当用户请求一个页面时，服务器会根据路由匹配到对应的组件，然后渲染该组件，最后将渲染后的html",{"_index":246,"t":{"87":{"position":[[0,64]]}}}],["star",{"_index":49,"t":{"14":{"position":[[206,6],[223,5]]}}}],["stars的数量从侧面反应了这些框架在开源社区中的受欢迎程度和广泛使用的程度。然而，stars数目并不是衡量一个工具好坏的唯一标准。除了stars数目外，还应考虑其他因素，例如功能特性、扩展性、性能等。每个工具都有自己的特点和优势，适用于不同的使用场景和需求。因此，在选择合适的静态网站生成器时，除了star",{"_index":58,"t":{"14":{"position":[[456,206]]}}}],["start",{"_index":170,"t":{"69":{"position":[[304,5],[319,5]]}}}],["statista的调查报告显示，42.62%的开发者选择了react.js，而18.82%的开发者使用了vue.j",{"_index":127,"t":{"43":{"position":[[207,61]]}}}],["suspens",{"_index":245,"t":{"85":{"position":[[24,15]]},"93":{"position":[[48,8],[174,9],[232,11],[244,9],[304,11]]}}}],["tabler/icon",{"_index":220,"t":{"75":{"position":[[773,13]]}}}],["text",{"_index":8,"t":{"4":{"position":[[51,4]]},"6":{"position":[[100,4]]}}}],["theme",{"_index":59,"t":{"14":{"position":[[663,6]]}}}],["tremor/react",{"_index":211,"t":{"75":{"position":[[664,13]]}}}],["ui",{"_index":115,"t":{"37":{"position":[[216,2]]},"39":{"position":[[70,2]]},"43":{"position":[[149,2]]},"47":{"position":[[154,2]]},"71":{"position":[[0,28],[29,42],[121,40]]}}}],["ui/cor",{"_index":218,"t":{"75":{"position":[[746,7]]}}}],["ui/icon",{"_index":219,"t":{"75":{"position":[[764,8]]}}}],["url",{"_index":50,"t":{"14":{"position":[[229,3]]},"65":{"position":[[47,26]]}}}],["us",{"_index":217,"t":{"75":{"position":[[732,3]]}}}],["vertic",{"_index":14,"t":{"6":{"position":[[67,9]]}}}],["virtual",{"_index":126,"t":{"43":{"position":[[114,7]]}}}],["visx/visx",{"_index":210,"t":{"75":{"position":[[653,10]]}}}],["vite",{"_index":76,"t":{"16":{"position":[[411,4]]}}}],["vitepress",{"_index":41,"t":{"10":{"position":[[87,10]]},"12":{"position":[[41,9]]},"14":{"position":[[275,9]]},"16":{"position":[[371,9]]}}}],["vitepress作为vue项目的一部分，可以享受到vue社区的支持。vu",{"_index":46,"t":{"14":{"position":[[56,67]]}}}],["vitepress官方提供了默认的主题，具有简洁的设计和易于导航的布局。这个主题适合构建技术文档和api文档等。vitepress使用vu",{"_index":61,"t":{"14":{"position":[[819,130]]}}}],["vitepress官方网站：https://vitepress.dev",{"_index":88,"t":{"22":{"position":[[26,35]]}}}],["vitepress，底层使用了vite、vue进行构建，vitepress运行时会有一个hydrate的过程，因此需要额外依赖vue.js的运行时支持，也就是需要加载额外的j",{"_index":68,"t":{"16":{"position":[[93,91]]}}}],["vitepress，底层使用了vue，因此支持你完全使用vu",{"_index":81,"t":{"18":{"position":[[80,46]]}}}],["vue",{"_index":70,"t":{"16":{"position":[[202,3],[234,3]]},"37":{"position":[[178,3],[205,6]]},"39":{"position":[[126,3]]},"53":{"position":[[205,3]]}}}],["vue.j",{"_index":105,"t":{"35":{"position":[[34,22],[115,6]]},"37":{"position":[[279,6]]},"39":{"position":[[0,49],[50,19],[85,40]]},"43":{"position":[[11,6],[163,40]]},"45":{"position":[[82,21]]},"47":{"position":[[11,6],[133,6]]},"49":{"position":[[31,9],[78,39]]},"51":{"position":[[11,6],[102,18]]},"53":{"position":[[95,67]]}}}],["vue.js：https://v2.ssr.vuejs.org/guide/hydration.html#cli",{"_index":91,"t":{"22":{"position":[[122,59]]}}}],["vue为主，可以尝试vitepress，但是vitepress不支持博客，当然你完全可以定制化主题，但是不妨可以先看看hexo",{"_index":84,"t":{"20":{"position":[[82,95]]}}}],["vue的ssg",{"_index":42,"t":{"10":{"position":[[98,83]]}}}],["walk",{"_index":111,"t":{"37":{"position":[[31,5]]}}}],["weather",{"_index":253,"t":{"93":{"position":[[14,7],[91,7],[292,8],[471,9]]}}}],["weather...</p",{"_index":258,"t":{"93":{"position":[[275,16]]}}}],["web",{"_index":124,"t":{"41":{"position":[[237,3]]},"43":{"position":[[269,3]]},"51":{"position":[[59,3],[121,3]]},"59":{"position":[[18,3]]},"61":{"position":[[5,3]]}}}],["webkit",{"_index":9,"t":{"6":{"position":[[0,8],[35,6],[48,6],[78,6],[211,10]]}}}],["webpack",{"_index":77,"t":{"16":{"position":[[418,8]]}}}],["weex",{"_index":133,"t":{"47":{"position":[[206,4]]}}}],["weex，该框架支持使用vue.j",{"_index":132,"t":{"47":{"position":[[160,22]]}}}],["weight",{"_index":29,"t":{"6":{"position":[[378,7]]}}}],["white",{"_index":5,"t":{"4":{"position":[[30,5]]},"6":{"position":[[468,6]]}}}],["width",{"_index":36,"t":{"6":{"position":[[436,6]]}}}],["xml",{"_index":122,"t":{"41":{"position":[[142,3]]}}}],["xml。jsx",{"_index":120,"t":{"41":{"position":[[72,7]]}}}]],"pipeline":["stemmer"]}}]